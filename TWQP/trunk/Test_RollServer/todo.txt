一些事实：

. 一份 server = 一张 桌子
. 其多份实例会被玩家看到一个列表，玩家可以选择进入
. 至少要等到两个玩家进入才能开始游戏。
. 等待当前进入的玩家都 ready 之后，游戏开始。
. ready 之后到下一轮游戏开始这段时间，有玩家再进入则处于 观战等待 状态


流程：

. 等待一定数量玩家进入
	. 玩家通过代理，向游戏服务发起询问：是否能够进入
	. 服务判断情况（比如检查当前人数上限上否达成，玩家是否有资格进入等）
		并回应：“可进入”，并记录“玩家编号”和“进入请求超时时间”以占位
		回应“不可进入”的情况在服务器端不作后续处理
	. 玩家收到“可进入”后，向游戏服务发起“进入”指令，同时界面上将表现出与“正在进入。。。”类似的东西
		收到“不可进入”就提示进入失败或相关信息
	. 服务收到玩家的“进入”指令后，判断该玩家是否存在于发起进入请求的玩家列表中
		如果存在，则向玩家回应“进入成功”
		如果不存在，则回应“进入失败”
	. 玩家在收到“进入成功”之后，须做类似“将主界面转至游戏”的动作
	. 服务进一步完善内存中成功进入的玩家资料，通知玩家：是时候点 Ready 了
		同时，记录玩家成功进入的时间，记录玩家 Ready 的超时时间
	. 玩家收到　可以点 Ready 的通知后，界面须表现出 Ready 可以点　的样子
		并且，根据超时时间，有个被踢出服务的 Ready 倒计时
	. 玩家点击 Ready ，服务收到“某玩家已 Ready”的命令
. 等待这些玩家 ready (与进入可混合）
. 某玩家进入后，启动一个超时时间，超过的还不 ready 的， T 掉
. 等到所有玩家都 ready, 游戏开始
. 通知玩家投掷骰子，并启动一个超时时间
. 超时，系统自动投骰子并通告
. 待得所有玩家均投掷过骰子，系统统计结果（胜，负，平）并通告
. 初始化下一轮游戏 （跳至开头）


异常处理：

. 玩家 ready 之前断开
. 玩家 ready 之后断开
. 玩家于游戏开始之后断开
. 玩家掷骰子后断开
. 玩家收到成绩通告后断开

. 和玩家相连的代理异常断开（可能发生于上面任何时机）


阶段：

. 等待玩家进入和Ready阶段（个体限时）
. 等待玩家下命令阶段（集体限时）


